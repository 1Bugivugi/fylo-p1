{"version":3,"sources":["img/illustration-main.svg","img/logo2.svg","logo.svg","img/logo1.svg","Components/Header.js","Components/Description.js","Components/SignUp.js","Components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Container_default","Row_default","Col_default","style","this","props","className","xs","src","logo2","span","offset","href","index_es","icon","illustration","Component","Description","state","width","weight1","fontWeight","SignUp","md","Button_default","variant","Wrapper","padding","height","Components_Header","Components_Description","Components_SignUp","library","add","faTwitter","faFacebook","faEnvelope","App","Components_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a5c7b4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/illustration-main.2d07e600.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.1c41e228.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo1.ee1545b5.svg\";","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport '../css/Header.css'\r\nimport illustration from '../img/illustration-main.svg';\r\nimport logo1 from '../img/logo1.svg';\r\nimport logo2 from '../img/logo2.svg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col style={this.props.style}>\r\n            <div className='header'>\r\n              <Row className='contact'>\r\n                <Col xs={4}>\r\n                  <img src={logo2} className='logo'></img>\r\n                </Col>\r\n                <Col xs={{span: 6, offset: 2}} className='icons'>\r\n                  <a href='https://www.twitter.com'><FontAwesomeIcon icon={['fab', 'twitter']} /></a>\r\n                  <a href='https://www.facebook.com'><FontAwesomeIcon icon={['fab', 'facebook']} /></a>\r\n                  <a href='mailto:***@gmail.com'><FontAwesomeIcon icon='envelope' /></a>\r\n                </Col>\r\n              </Row>\r\n              <img src={illustration} className='illustration'></img>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport '../css/Description.css';\r\n\r\nclass Description extends Component {\r\n\r\n  state = {\r\n    width: {width: '295px'},\r\n    weight1: {fontWeight: '800'}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='descContainer' style={this.state.width}>\r\n        <Row>\r\n          <Col>\r\n            <div className='descColH'>\r\n              <h4 style={this.state.weight1}>\r\n                All your files in one secure location, accessible anywhere.\r\n              </h4>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div className='descColp'>\r\n              <p>\r\n                Fylo stores all your most important files in one secure location.\r\n  Access them wherever you need, share and collaborate with friends,\r\n  family and co-workers.\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Description;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport '../css/SignUp.css';\r\n\r\nclass SignUp extends Component {\r\n\r\n  state = {\r\n    width: {width: '295px'}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='signUpGrp' style={this.state.width}>\r\n        <Row>\r\n          <Col>\r\n            <div>\r\n              <Row>\r\n                <Col>\r\n                  <p className='callToA'>Sign up for early access</p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={7}>\r\n                  <p><input></input></p>\r\n                </Col>\r\n                <Col md={5}>\r\n                <p><Button variant='success' className='colorMe1'>Sign Up</Button></p>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={{span: 5, offset: 8}}>\r\n                  <p className='pp'><a href='#' className='pp'>Privacy Policy</a></p>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Header from './Header';\r\nimport Description from './Description';\r\nimport SignUp from './SignUp';\r\nimport '../css/Wrapper.css';\r\n\r\nclass Wrapper extends Component {\r\n\r\n  state = {\r\n    style: {padding: '0px'},\r\n    height: {height: '100%'}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className='wrapper' style={this.state.height}>\r\n        <Row>\r\n          <div>\r\n          <Col style={this.state.style}>\r\n            <Header\r\n              style={this.state.style}\r\n            />\r\n          </Col>\r\n          </div>\r\n          <div className='block1'>\r\n            <Col className='respDesc'>\r\n              <Description />\r\n            </Col>\r\n            <Col className='respSignUp'>\r\n              <SignUp />\r\n            </Col>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './css/Wrapper.css';\nimport Wrapper from './Components/Wrapper';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTwitter, faFacebook } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTwitter, faFacebook, faEnvelope)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}